{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/dickymr/Documents/Portofolio/simple-news-website/pages/p/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../src/components/Layout';\n\nvar News = function News(props) {\n  var router = useRouter();\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, router.query.id), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"This is the blog post content.\"));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, res, show;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/shows/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          show = _context.sent;\n          console.log(\"Fetched show: \".concat(show.name));\n          return _context.abrupt(\"return\", {\n            show: show\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default News;","map":{"version":3,"sources":["/home/dickymr/Documents/Portofolio/simple-news-website/pages/p/[id].js"],"names":["useRouter","fetch","Layout","News","props","router","query","id","Post","getInitialProps","context","res","json","show","console","log","name"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;AACpB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKK,MAAM,CAACC,KAAP,CAAaC,EAAlB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFF,CADF;AAMD,CATD;;AAWAC,IAAI,CAACC,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACbH,UAAAA,EADa,GACNG,OAAO,CAACJ,KADF,CACbC,EADa;AAAA;AAAA,2CAEHN,KAAK,wCAAiCM,EAAjC,EAFF;;AAAA;AAEfI,UAAAA,GAFe;AAAA;AAAA,2CAGFA,GAAG,CAACC,IAAJ,EAHE;;AAAA;AAGfC,UAAAA,IAHe;AAKrBC,UAAAA,OAAO,CAACC,GAAR,yBAA6BF,IAAI,CAACG,IAAlC;AALqB,2CAOd;AAAEH,YAAAA,IAAI,EAAJA;AAAF,WAPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAUA,eAAeV,IAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../src/components/Layout';\n\nconst News = props => {\n  const router = useRouter();\n\n  return (\n    <Layout>\n      <h1>{router.query.id}</h1>\n      <p>This is the blog post content.</p>\n    </Layout>\n  );\n};\n\nPost.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n\n  console.log(`Fetched show: ${show.name}`);\n\n  return { show };\n};\n\nexport default News;\n"]},"metadata":{},"sourceType":"module"}